#!/bin/bash

	set -eu
	app=$YNH_APP_INSTANCE_NAME
	source="https://github.com/SickChill/SickChill"

# Backup the current version of the app, restore it if the upgrade fails
	EXIT_PROPERLY () {
		trap '' EXIT
		set +e
		sudo yunohost backup restore --ignore-hooks $app-before-upgrade --apps $app --force --quiet	# Restore the backup if upgrade failed
		ynh_die "Upgrade failed. The app was restored to the way it was before the failed upgrade."
	}
	if [[ -n $(sudo yunohost backup info $app-before-upgrade || true) ]]; then
		sudo yunohost backup delete $app-before-upgrade
	fi
	sudo yunohost backup create --ignore-hooks --apps $app --name $app-before-upgrade --quiet
	set -e
	trap EXIT_PROPERLY ERR

# Source app helpers
	source /usr/share/yunohost/helpers

# Retrieve arguments
	domain=$(ynh_app_setting_get "$app" domain)
	path=$(ynh_app_setting_get "$app" path)
	port=$(ynh_app_setting_get "$app" port)

# Cancel upgrade if the version is too old
	if [[ -n $(ynh_app_setting_get $app method) ]]; then
		ynh_die "Your current version is too old and cannot be upgraded.\
		If you had a local install, please remove the app and reinstall it.\
		If you had a remote install, please remove the app and install redirect_ynh for this purpose instead."	
	fi

# Destinations definitions
	app_install_dir="/opt/yunohost/$app"
	app_data_dir="/home/yunohost.app/$app"
	app_logs_dir="/var/log/$app"
	app_config_file="${app_data_dir}/settings.conf"
	app_pid_file="/var/run/$app/$app.pid"
	app_python_bin="/usr/bin/python"

# Upgrade Sickrage

	# Kill app
	sudo service $app stop || true

	# Upgrade to the latest version of app using the fork
	cd $app_install_dir && sudo git pull
	cd -
	
	# Upgrade dependencies
	if [[ $(python --version 2>&1) != Python\ 2* ]]; then
		app_python_bin=$app_install_dir/bin/python
		sudo apt-get install -y python-pip python-virtualenv python-dev uwsgi uwsgi-plugin-python
	fi

	# YunoHost multimedia
		# Add yunohost.multimedia directory
		wget -qq https://github.com/YunoHost-Apps/yunohost.multimedia/archive/master.zip
		unzip -qq master.zip
		sudo ./yunohost.multimedia-master/script/ynh_media_build.sh
		# Give write access to the yunohost.multimedia directory so that Sickrage can move Movies to the Movie directory
		sudo usermod -a -G multimedia $app
		# Creates the "Series" subfolder in "Video"
		sudo mkdir -p "/home/yunohost.multimedia/share/Video/Series"
		# Fix permissions
		sudo ./yunohost.multimedia-master/script/ynh_media_build.sh


	# Redirect logs directory
	if [[ $app_logs_dir != "$app_data_dir"* ]]; then
		sudo sed -i "s@self.log_dir =.*@self.log_dir = '$app_logs_dir'@g" $app_install_dir/SickBeard.py
	fi

	# Permissions
	sudo chown -R $app:$app $app_install_dir
	sudo chown -R $app:$app $app_data_dir
	
	# Configure service
	sed -i "s@__PYTHON__@$app_python_bin@g" 		../conf/systemd.service
	sed -i "s@__APPDIR__@$app_install_dir@g" 		../conf/systemd.service
	sed -i "s@__DATADIR__@$app_data_dir@g" 			../conf/systemd.service
	sed -i "s@__PIDFILE__@$app_pid_file@g" 			../conf/systemd.service
	sed -i "s@__CONFIGFILE__@$app_config_file@g" 	../conf/systemd.service
	sed -i "s@__USER__@$app@g" 						../conf/systemd.service
	sudo cp ../conf/systemd.service /etc/systemd/system/$app.service
	sudo systemctl daemon-reload
	sudo systemctl enable $app
	sudo yunohost service add $app

	# Start service
	sudo yunohost service start $app

# Configure Nginx and reload
	sed -i "s@__PATH__@$path@g" ../conf/nginx.conf
	sed -i "s@__PORT__@$port@g" ../conf/nginx.conf
	sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# Open the /api path so that external applications can connect
	ynh_app_setting_set "$app" unprotected_uris "/api"

# Reload Nginx and regenerate SSOwat conf
	sudo service nginx reload
	sudo yunohost app ssowatconf
